{"version":3,"sources":["components/globalStyles.js","components/Themes.js","components/Search.js","components/Result.js","components/Results.js","components/Popup.js","components/Header.js","App.js","Container.js","serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","darkTheme","Search","handleInput","icon","className","id","type","placeholder","onChange","style","width","Result","result","openPopup","timeLapsed","Math","floor","Date","now","created_at","time","onClick","src","company_logo","alt","title","company","location","Results","results","map","key","Popup","selected","closePopup","description","split","join","howToApply","how_to_apply","display","justifyContent","flexDirection","height","href","company_url","target","rel","position","margin","left","parse","alignItems","backgroundColor","color","Header","prop","handleTheme","useState","checked","setChecked","right","top","Switch","event","name","inputProps","App","s","checkedFT","state","setState","setTheme","themeToggler","config","headers","useEffect","navigator","geolocation","getCurrentPosition","console","log","coords","latitude","longitude","axios","get","then","response","onLoadData","data","e","value","prevState","FormControlLabel","control","Checkbox","checkedB","filteredResults","filter","label","baseURL","Container","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mdACO,IAAMA,EAAeC,YAAH,KAEP,qBAAGC,MAAkBC,QAC1B,qBAAGD,MAAkBE,QCJrBC,EAAa,CACxBF,KAAM,OACNC,KAAM,UACNE,aAAc,OACdC,WAAY,WAEDC,EAAY,CACvBL,KAAM,UACNC,KAAM,UACNE,aAAc,UACdC,WAAY,Q,kCCWCE,MAjBf,YAA8C,IAA5BC,EAA2B,EAA3BA,YAAaN,EAAc,EAAdA,KAAMO,EAAQ,EAARA,KACnC,OACE,6BAASC,UAAU,kBACjB,yBAAKC,GAAG,mBACI,WAATF,EAAoB,kBAAC,IAAD,MAAiB,kBAAC,IAAD,MACtC,2BACEG,KAAK,OACLC,YAAaX,EACbQ,UAAU,YACVI,SAAUN,EACVO,MAAO,CAAEC,MAAO,cCcXC,MA1Bf,YAAwC,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAClBC,EAAaC,KAAKC,OACrBC,KAAKC,MAAQ,IAAID,KAAKL,EAAOO,aAAe,MAEzCC,EACJN,GAAc,GACVC,KAAKC,MAAMF,EAAa,IAAM,EAA9B,UACKC,KAAKC,MAAMF,EAAa,IAD7B,uBAEKC,KAAKC,MAAMF,EAAa,IAF7B,YADJ,UAIOA,EAJP,cAKF,OACE,yBAAKV,UAAU,SAASiB,QAAS,kBAAMR,EAAUD,EAAOP,MACtD,uBAAGA,GAAG,gBACJ,8BACGe,EADH,IACU,MACPR,EAAON,OAGZ,yBAAKgB,IAAKV,EAAOW,aAAcC,IAAI,iBACnC,uBAAGnB,GAAG,iBAAiBO,EAAOa,OAC9B,uBAAGpB,GAAG,gBAAgBO,EAAOc,SAC7B,uBAAGrB,GAAG,oBAAoBO,EAAOe,YCRxBC,MAXf,YAA0C,IAAvBC,EAAsB,EAAtBA,QAAShB,EAAa,EAAbA,UAE1B,OACE,6BAAST,UAAU,WAChByB,EAAQC,KAAI,SAAClB,GAAD,OACX,kBAAC,EAAD,CAAQmB,IAAKnB,EAAOP,GAAIO,OAAQA,EAAQC,UAAWA,S,QCqE5CmB,MA3Ef,YAA0C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACrBC,EAAcF,EAASE,YAAYC,MAAM,QAAQC,KAAK,gBACtDC,EAAaL,EAASM,aAAaH,MAAM,QAAQC,KAAK,gBAY1D,OACE,6BAASjC,UAAU,SACjB,yBAAKA,UAAU,UAAUC,GAAG,aAC1B,yBACEI,MAAO,CACL+B,QAAS,OACTC,eAAgB,gBAChBC,cAAe,QAGjB,yBACEpB,IAAKW,EAASV,aACdC,IAAI,eACJf,MAAO,CAAEkC,OAAQ,QAASjC,MAAO,WAEnC,4BAAQW,QAzBU,WAExB,OACE,uBACEuB,KAAI,gDAA2CX,EAASY,aACxDC,OAAO,SACPC,IAAI,yBAmBkC3C,UAAU,gBAA9C,gBAGA,4BAAQA,UAAU,QAAQiB,QAASa,GAAnC,UAIF,6BACA,6BACA,yBAAK9B,UAAU,QACb,wBAAIK,MAAO,CAAEuC,SAAU,WAAYC,OAAQ,OAAQC,KAAM,UACtDjB,EAASR,QAGd,6BACA,6BACC0B,YAAMhB,GACP,6BACA,6BACA,yBACE1B,MAAO,CACL+B,QAAS,OACTC,eAAgB,SAChBW,WAAY,SACZ1C,MAAO,OACPiC,OAAQ,QACRD,cAAe,SACfW,gBAAiB,UACjBC,MAAO,UAGT,8CACA,6BACA,6BACA,6BAAMH,YAAMb,KAEd,6BACA,6BACA,4BAAQlC,UAAU,QAAQiB,QAASa,GAAnC,Y,2CClCOqB,EA/BA,SAACC,GAAU,IAChBC,EAAgBD,EAAhBC,YADe,EAEOC,oBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAcvB,OACE,yBAAKvD,GAAG,iBACN,yBAAKA,GAAG,cAAcI,MAPZ,CACZuC,SAAU,WACVa,MAAO,QACPC,IAAK,SAKD,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,CACEJ,QAASA,EACTnD,SAhBa,SAACwD,GACpBP,IACAG,EAAWI,EAAMlB,OAAOa,UAelBL,MAAM,UACNW,KAAK,WACLC,WAAY,CAAE,aAAc,iCAE9B,kBAAC,IAAD,SCsJOC,MA7Jf,WAAgB,IAAD,EACaT,mBAAS,CACjCU,EAAG,GACHzC,SAAU,GACV0C,WAAW,EACXxC,QAAS,GACTI,SAAU,KANC,mBACNqC,EADM,KACCC,EADD,OAQab,mBAAS,SARtB,mBAQNhE,EARM,KAQC8E,EARD,KASPC,EAAe,WACCD,EAAV,UAAV9E,EAA6B,OAAmB,UAE9CgF,EAAS,CACXC,QAAS,CAAE,8BAA+B,MAmF5C,OAhFAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAAU/B,GACjDgC,QAAQC,IAAI,gBAAiBjC,EAASkC,OAAOC,UAC7CH,QAAQC,IAAI,iBAAkBjC,EAASkC,OAAOE,WAC9CC,IACGC,IADH,yFAEsFtC,EAASkC,OAAOC,SAFtG,iBAEuHnC,EAASkC,OAAOE,WACnIV,GAEDa,MAAK,SAACC,GACL,IAAMC,EAAaD,EAASE,KAE5BnB,GAAS,WACP,OAAO,2BAAKD,GAAZ,IAAmBzC,QAAS4D,eAInC,IAgED,kBAAC,IAAD,CAAe/F,MAAiB,UAAVA,EAAoBG,EAAaG,GACrD,oCACE,kBAACR,EAAD,MACA,yBAAKY,UAAU,OACb,kBAAC,EAAD,CAAQC,GAAG,SAASoD,YAAagB,IAEjC,8BACmC,qBAAzBH,EAAMrC,SAASR,OACrB,6BACE,8BACE,yBAAKpB,GAAG,aACN,kBAAC,EAAD,CACEH,YAnDA,SAACyF,GACnB,IAAIvB,EAAIuB,EAAE7C,OAAO8C,MACjBrB,GAAS,SAACsB,GACR,OAAO,2BAAKA,GAAZ,IAAuBzB,EAAGA,QAiDVxE,KAAK,yCACLO,KAAK,WAEP,kBAAC,EAAD,CACED,YA/DQ,SAACyF,GAC3B,IAAIhE,EAAWgE,EAAE7C,OAAO8C,MACxBrB,GAAS,SAACsB,GACR,OAAO,2BAAKA,GAAZ,IAAuBlE,SAAUA,QA6DjB/B,KAAK,uBACLO,KAAK,aAGP,kBAAC2F,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACErC,QAASW,EAAM2B,SACfzF,SA1DK,SAACwD,GAC5BO,EAAS,2BAAKD,GAAN,kBAAcN,EAAMlB,OAAOmB,KAAOD,EAAMlB,OAAOa,WACvD,IAAIuC,EAAkB5B,EAAMzC,QAAQsE,QAClC,SAACvF,GAAD,MAA4B,cAAhBA,EAAON,QAErB0E,QAAQC,IAAIX,EAAMzC,SAClBmD,QAAQC,IAAIiB,GACZ3B,EAAS,2BAAKD,GAAN,IAAazC,QAASqE,MAoDRjC,KAAK,YACLX,MAAM,YAGV8C,MAAM,mBAGR,2BACE9F,KAAK,SACLe,QAlGL,SAACsE,GACd,IAAIU,EACF,6EAEFA,EAAU/B,EAAMD,UAAYgC,EAAU,kBAAoBA,EAC1DA,EACqB,KAAnB/B,EAAM3C,SAAkB0E,EAAU,aAAe/B,EAAM3C,SAAW0E,EACpEA,EAAsB,KAAZ/B,EAAMF,EAAWiC,EAAU,WAAa/B,EAAMF,EAAIiC,EAE5DhB,IAAMgB,EAAS3B,GAAQa,MAAK,YAAe,IAAZG,EAAW,EAAXA,KAC7BnB,GAAS,WACP,OAAO,2BAAKD,GAAZ,IAAmBzC,QAAS6D,WAwFdtF,UAAU,YACVwF,MAAM,aAIZ,kBAAC,EAAD,CAAS/D,QAASyC,EAAMzC,QAAShB,UAhE7B,SAACR,GACjBgF,IACE,yEACEhF,EACA,QACFqE,GACAa,MAAK,YAAe,IAChB3E,EADe,EAAX8E,KAGRnB,GAAS,WACP,OAAO,2BAAKD,GAAZ,IAAmBrC,SAAUrB,cA2DO,oBAAxB0D,EAAMrC,SAASR,OACrB,oCACE,kBAAC,EAAD,CAAQpB,GAAG,SAASoD,YAAagB,IACjC,kBAAC,EAAD,CAAOxC,SAAUqC,EAAMrC,SAAUC,WAzD5B,WACjBqC,GAAS,WACP,OAAO,2BAAKD,GAAZ,IAAmBrC,SAAU,iBCvGpBqE,EARG,kBAChB,yBAAKlG,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmG,KAAK,IAAIC,UAAWrC,OCKbsC,QACW,cAA7BC,OAAO/E,SAASgF,UAEe,UAA7BD,OAAO/E,SAASgF,UAEhBD,OAAO/E,SAASgF,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBnC,WACrBA,UAAUoC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtC,QAAQsC,MAAMA,EAAMC,a","file":"static/js/main.07c22b4d.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n  `;\n","export const lightTheme = {\n  body: \"#FFF\",\n  text: \"#363537\",\n  toggleBorder: \"#FFF\",\n  background: \"#363537\",\n};\nexport const darkTheme = {\n  body: \"#363537\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nfunction Search({ handleInput, text, icon }) {\n  return (\n    <section className=\"searchbox-wrap\">\n      <div id=\"searchContainer\">\n        {icon === \"search\" ? <SearchIcon /> : <LocationOnIcon />}\n        <input\n          type=\"text\"\n          placeholder={text}\n          className=\"searchbox\"\n          onChange={handleInput}\n          style={{ width: \"500px\" }}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\nfunction Result({ result, openPopup }) {\n  const timeLapsed = Math.floor(\n    (Date.now() - new Date(result.created_at)) / 3600000\n  );\n  const time =\n    timeLapsed >= 24\n      ? Math.floor(timeLapsed / 24) > 1\n        ? `${Math.floor(timeLapsed / 24)} days ago`\n        : `${Math.floor(timeLapsed / 24)} day ago`\n      : `${timeLapsed} hours ago`;\n  return (\n    <div className=\"result\" onClick={() => openPopup(result.id)}>\n      <p id=\"company_type\">\n        <span>\n          {time} {\" . \"}\n          {result.type}\n        </span>\n      </p>\n      <img src={result.company_logo} alt=\"company_logo\" />\n      <p id=\"company_title\">{result.title}</p>\n      <p id=\"company_name\">{result.company}</p>\n      <p id=\"company_location\">{result.location}</p>\n    </div>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport Result from \"./Result\";\n\n\nfunction Results({ results, openPopup }) {\n  // console.log(results)\n  return (\n    <section className=\"results\">\n      {results.map((result) => (\n        <Result key={result.id} result={result} openPopup={openPopup} />\n      ))}\n    </section>\n  )\n}\n\nexport default Results;\n","import React from \"react\";\nimport parse from \"html-react-parser\";\n\nfunction Popup({ selected, closePopup }) {\n  var description = selected.description.split(\"</p>\").join(\"<br /><br />\");\n  var howToApply = selected.how_to_apply.split(\"</p>\").join(\"<br /><br />\");\n\n  const handleCompanySite = () => {\n    // window.location.open = selected.company_url;\n    return (\n      <a\n        href={`https://cors-anywhere.herokuapp.com/+ ${selected.company_url}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    );\n  };\n  return (\n    <section className=\"popup\">\n      <div className=\"content\" id=\"popuphtml\">\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n          }}\n        >\n          <img\n            src={selected.company_logo}\n            alt=\"company_logo\"\n            style={{ height: \"100px\", width: \"100px\" }}\n          />\n          <button onClick={handleCompanySite} className=\"company_site\">\n            Company Site\n          </button>\n          <button className=\"close\" onClick={closePopup}>\n            Close\n          </button>\n        </div>\n        <br />\n        <br />\n        <div className=\"plot\">\n          <h2 style={{ position: \"absolute\", margin: \"auto\", left: \"500px\" }}>\n            {selected.title}\n          </h2>\n        </div>\n        <br />\n        <br />\n        {parse(description)}\n        <br />\n        <br />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"150px\",\n            flexDirection: \"column\",\n            backgroundColor: \"#5865e0\",\n            color: \"white\",\n          }}\n        >\n          <div>How to Apply?</div>\n          <br />\n          <br />\n          <div>{parse(howToApply)}</div>\n        </div>\n        <br />\n        <br />\n        <button className=\"close\" onClick={closePopup}>\n          Close\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Popup;\n","import React, { useState } from \"react\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport FlareIcon from \"@material-ui/icons/Flare\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst Header = (prop) => {\n  const { handleTheme } = prop;\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = (event) => {\n    handleTheme();\n    setChecked(event.target.checked);\n  };\n\n  const style = {\n    position: \"absolute\",\n    right: \"100px\",\n    top: \"35px\",\n  };\n  return (\n    <div id=\"colouredPanel\">\n      <div id=\"switchPanel\" style={style}>\n        <FlareIcon />\n        <Switch\n          checked={checked}\n          onChange={handleChange}\n          color=\"primary\"\n          name=\"checkedA\"\n          inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n        />\n        <Brightness3Icon />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\n\nimport Search from \"./components/Search\";\nimport Results from \"./components/Results\";\nimport Popup from \"./components/Popup\";\n// import PopupMock from \"./components/PopupMock\";\nimport Header from \"./components/Header\";\nimport mock from \"./mockData\";\n\n// function InvalidSearchAlert(props) {\n//   const { text } = props;\n//   return (\n//     <Alert elevation={6} variant=\"filled\" {...props}>\n//       {text}\n//     </Alert>\n//   );\n// }\nfunction App() {\n  const [state, setState] = useState({\n    s: \"\",\n    location: \"\",\n    checkedFT: false,\n    results: [],\n    selected: {},\n  });\n  const [theme, setTheme] = useState(\"light\");\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n  var config = {\n    headers: { \"Access-Control-Allow-Origin\": \"*\" },\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?lat=${position.coords.latitude}?long=${position.coords.longitude}`,\n          config\n        )\n        .then((response) => {\n          const onLoadData = response.data;\n\n          setState(() => {\n            return { ...state, results: onLoadData };\n          });\n        });\n    });\n  }, []);\n\n  const search = (e) => {\n    var baseURL =\n      \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\n    baseURL = state.checkedFT ? baseURL + \"?full_time=true\" : baseURL;\n    baseURL =\n      state.location !== \"\" ? baseURL + \"?location=\" + state.location : baseURL;\n    baseURL = state.s !== \"\" ? baseURL + \"?search=\" + state.s : baseURL;\n\n    axios(baseURL, config).then(({ data }) => {\n      setState(() => {\n        return { ...state, results: data };\n      });\n    });\n  };\n\n  const handleInputLocation = (e) => {\n    let location = e.target.value;\n    setState((prevState) => {\n      return { ...prevState, location: location };\n    });\n  };\n\n  const handleInput = (e) => {\n    let s = e.target.value;\n    setState((prevState) => {\n      return { ...prevState, s: s };\n    });\n  };\n\n  const handleChangeCheckBox = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    var filteredResults = state.results.filter(\n      (result) => result.type === \"Full Time\"\n    );\n    console.log(state.results);\n    console.log(filteredResults);\n    setState({ ...state, results: filteredResults });\n  };\n\n  const openPopup = (id) => {\n    axios(\n      \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions/\" +\n        id +\n        \".json\",\n      config\n    ).then(({ data }) => {\n      let result = data;\n\n      setState(() => {\n        return { ...state, selected: result };\n      });\n    });\n  };\n\n  const closePopup = () => {\n    setState(() => {\n      return { ...state, selected: {} };\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <div className=\"App\">\n          <Header id=\"Header\" handleTheme={themeToggler} />\n\n          <main>\n            {typeof state.selected.title === \"undefined\" && (\n              <div>\n                <span>\n                  <div id=\"searchbar\">\n                    <Search\n                      handleInput={handleInput}\n                      text=\"Filter by Title, Company, Expertise...\"\n                      icon=\"search\"\n                    />\n                    <Search\n                      handleInput={handleInputLocation}\n                      text=\"Filter by Location..\"\n                      icon=\"location\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={state.checkedB}\n                          onChange={handleChangeCheckBox}\n                          name=\"checkedFT\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Full Time only\"\n                    />\n\n                    <input\n                      type=\"button\"\n                      onClick={search}\n                      className=\"appSubmit\"\n                      value=\"Submit\"\n                    />\n                  </div>\n                </span>\n                <Results results={state.results} openPopup={openPopup} />\n                {/* <Results results={mock} openPopup={openPopup} /> */}\n              </div>\n            )}\n\n            {typeof state.selected.title != \"undefined\" && (\n              <>\n                <Header id=\"Header\" handleTheme={themeToggler} />\n                <Popup selected={state.selected} closePopup={closePopup} />\n              </>\n            )}\n          </main>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport App from './App';\n\nconst Container = () => (\n  <div className=\"app-routes\">\n    <Switch>\n      <Route path=\"/\" component={App} />\n    </Switch>\n  </div>\n);\n\nexport default Container;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Container from \"./Container\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Container />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}